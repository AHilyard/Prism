plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
}

ext {
	prop = new Properties()
}

apply from: "evaluateprops.gradle"

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.name + '-' + project.mcVersion + '-fabric'

sourceSets.main.java.srcDirs += 'java'
sourceSets.main.resources.srcDirs += 'resources'

dependencies {
	minecraft "com.mojang:minecraft:${project.mcVersion}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loaderVersion}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabricVersion}"
}

loom {
	accessWidenerPath = file("src/main/resources/${project.name.toLowerCase()}.accesswidener")
}

processResources {
	inputs.property "modId", prop.modId
	inputs.property "version", prop.version
	inputs.property "displayName", prop.displayName

	filesMatching("fabric.mod.json") {
		expand (
			modId: prop.modId,
			version: prop.version,
			displayName: prop.displayName
		)
	}
	outputs.upToDateWhen { false }
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

jar {
	manifest {
		attributes(["Specification-Title":		prop.name,
					"Specification-Vendor":		prop.author,
					"Specification-Version":	prop.version,
					"Implementation-Title":		prop.name,
					"Implementation-Version":	prop.version,
					"Implementation-Vendor" :	prop.author,
					"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")])
	}
}